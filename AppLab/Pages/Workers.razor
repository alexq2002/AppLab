@page "/workers"
@using AppLab.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using OfficeOpenXml;
@using System.IO;

<h3>Lista de Trabajadores</h3>

@if (workers == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <button @onclick="DownloadExcel">Descargar Excel</button>

    <table class="table">
        <thead>
            <tr>
                <th>Apellido Paterno</th>
                <th>Apellido Materno</th>
                <th>Nombres</th>
                <th>Identificación</th>
                <th>Fecha de Ingreso</th>
                <th>Entidad Bancaria</th>
                <th>Dirección</th>
                <th>Teléfono Fijo</th>
                <th>Teléfono Móvil</th>
                <th>Género</th>
                <!-- Add more headers for additional attributes -->
            </tr>
        </thead>
        <tbody>
            @foreach (var worker in workers)
            {
                <tr>
                    <td>@worker.Apellido_Paterno</td>
                    <td>@worker.Apellido_Materno</td>
                    <td>@worker.Nombres</td>
                    <td>@worker.Identificacion</td>
                    <td>@worker.FechaIngreso.ToString("dd/MM/yyyy")</td>
                    <td>@worker.Entidad_Bancaria</td>
                    <td>@worker.Direccion</td>
                    <td>@worker.Telefono_Fijo</td>
                    <td>@worker.Telefono_Movil</td>
                    <td>@worker.Genero</td>
                    <!-- Add more cells for additional attributes -->
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Worker> workers;

    protected override async Task OnInitializedAsync()
    {
        int emisorCode = 2;
        workers = await Http.GetFromJsonAsync<List<Worker>>($"http://apiservicios.ecuasolmovsa.com:3009/api/Varios/TrabajadorSelect?sucursal={emisorCode}");
    }

    private void DownloadExcel()
    {
        ExcelPackage.LicenseContext = OfficeOpenXml.LicenseContext.NonCommercial;
        using (var package = new ExcelPackage())
        {
            var worksheet = package.Workbook.Worksheets.Add("Trabajadores");

            // Headers
            worksheet.Cells["A1"].Value = "Cedula";
            worksheet.Cells["B1"].Value = "Tipo Documento";
            worksheet.Cells["C1"].Value = "Nombres";
            worksheet.Cells["D1"].Value = "Apellido Paterno";
            worksheet.Cells["E1"].Value = "Apellido Materno";
            worksheet.Cells["F1"].Value = "Genero";
            worksheet.Cells["G1"].Value = "Salario";
            // Add more headers for additional attributes

            // Data
            for (int i = 0; i < workers.Count; i++)
            {
                var worker = workers[i];
                worksheet.Cells[i + 2, 1].Value = worker.Identificacion;
                worksheet.Cells[i + 2, 2].Value = worker.Tipo_trabajador; // Assuming Tipo Documento is stored in Tipo_trabajador
                worksheet.Cells[i + 2, 3].Value = worker.Nombres;
                worksheet.Cells[i + 2, 4].Value = worker.Apellido_Paterno;
                worksheet.Cells[i + 2, 5].Value = worker.Apellido_Materno;
                worksheet.Cells[i + 2, 6].Value = worker.Genero;
                worksheet.Cells[i + 2, 7].Value = worker.Remuneracion_Minima;

                // Add more cells for additional attributes
            }

            var memoryStream = new MemoryStream(package.GetAsByteArray());

            // Descargar el archivo Excel
            string fileName = "workers.xlsx";
            var base64String = Convert.ToBase64String(memoryStream.ToArray());
            NavigationManager.NavigateTo($"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{base64String}", forceLoad: true);
        }
    }

}
